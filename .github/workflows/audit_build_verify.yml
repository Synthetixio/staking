name: Staking CI

on:
  push:
  pull_request:
    branches: [master, dev]

jobs:
  audit:
    # run only on master/dev branch and pull requests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-sec-tools/alpine:14.17
      credentials:
        username: synthetixio
        password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # pin@v2

      - name: Audit dependencies
        run: audit-ci --critical

      - name: Lockfile lint
        run: lockfile-lint -p yarn.lock --type yarn --allowed-hosts yarn github.com --allowed-schemes "https:" "yarn:" "git+https:"

  build:
    needs: audit
    # run only on audit success or audit skipped
    if: always() && needs.audit.result == 'success' || always() && needs.audit.result == 'skipped'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-node/alpine:14.17
      credentials:
        username: synthetixio
        password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # pin@v2

      - name: Set yarn cache directory
        run: yarn config set cache-folder .yarn-cache
        continue-on-error: true

      - name: Cache yarn modules
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0 # pin@v2
        with:
          path: |
            .yarn-cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        continue-on-error: true

      - name: Install dependencies
        run: yarn install

      - name: Lint
        # run only on master/dev branch and pull requests
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
        run: yarn lint:sarif

      - name: Unit
        # run only on master/dev branch and pull requests
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
        run: yarn test:unit

      - name: Upload lint results
        # run if lint failed and only on master/dev branch and pull requests
        if: always() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request')
        uses: github/codeql-action/upload-sarif@28eead240834b314f7def40f6fcba65d100d99b1 # pin@codeql-bundle-20210517
        with:
          sarif_file: lint-results.sarif
        continue-on-error: true

      - name: Cache next.js build cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0 # pin@v2
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-cache-
        continue-on-error: true

      - name: Build
        run: yarn build

      - name: Compress build
        run: tar -zcvf build.tar.gz .next

      - name: Archive build
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # pin@v2
        with:
          name: build
          path: build.tar.gz  
      # This are really big files that vercel use when prerendeing, not needed for dispersed
      - name: Remove out pages
        run: rm -r out/_next/static/chunks/pages

      - name: Change permission of out folder
        run: chmod 777 ./out

      - name: Build dispersed 
        run: yarn dispersed-bundle

      - name: Upload dispersed bundle to S3
        uses: Synthetixio/upload-s3-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: synthetix-staking-dispersed
          source_dir: 'dispersed-dist'
          destination_dir: 'publish'
  

  e2e:
    needs: build
    # run only on master/dev branch
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-e2e/ubuntu:14.17
      credentials:
        username: synthetixio
        password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # pin@v2

      - name: Set yarn cache directory
        run: yarn config set cache-folder .yarn-cache
        continue-on-error: true

      - name: Cache yarn modules
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0 # pin@v2
        with:
          path: |
            .yarn-cache
            node_modules
          key: ${{ runner.os }}-e2e-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-e2e-
        continue-on-error: true

      - name: Install dependencies
        run: yarn install
        env:
          CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Set deployment url
        shell: bash
        run: |
          if [ ${{ github.event_name }} == pull_request ]
          then
            export BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#refs/heads/} | sed -e 's/\//-/g')
            echo "BASE_URL=https://${{ secrets.VERCEL_PREFIX }}-$BRANCH_NAME-${{ secrets.VERCEL_DOMAIN }}" >> $GITHUB_ENV
          else
            export BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -e 's/\//-/g')
            echo "BASE_URL=https://${{ secrets.VERCEL_PREFIX }}-$BRANCH_NAME-${{ secrets.VERCEL_DOMAIN }}" >> $GITHUB_ENV
          fi

      - name: Download build
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # pin@v2
        with:
          name: build

      - name: Extract build
        run: tar -xf build.tar.gz

      - name: Run e2e tests
        run: yarn test:e2e:ci
        env:
          SECRET_WORDS: ${{ secrets.SECRET_WORDS }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ETHERSCAN_KEY: ${{ secrets.ETHERSCAN_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Archive e2e artifacts
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # pin@v2
        if: always()
        with:
          name: e2e-artifacts
          path: |
            tests/e2e/videos
            tests/e2e/screenshots
        continue-on-error: true
