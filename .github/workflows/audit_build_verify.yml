name: Staking CI

on:
  push:
  pull_request:
    branches: [master, dev]

jobs:
  audit:
    # run only on master/dev branch and pull requests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-sec-tools/base:12.21-npm6
      credentials:
        username: synthetixio
        password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
    - name: Checkout
      uses: actions/checkout@ee5a9d1395988d7c82c67c69571871f5994b94df # pin@v2

    - name: Audit dependencies
      run: npm audit --audit-level=critical

    - name: Lockfile lint
      run: lockfile-lint -p package-lock.json --type npm --allowed-hosts npm github.com --allowed-schemes "https:" "git+https:" "git+ssh:"

  build:
    needs: audit
    # run only on audit success or audit skipped
    if: always() && needs.audit.result == 'success' || always() && needs.audit.result == 'skipped'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-node/alpine:12.21-npm6
      credentials:
        username: synthetixio
        password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
    - name: Checkout
      uses: actions/checkout@ee5a9d1395988d7c82c67c69571871f5994b94df # pin@v2

    - name: Cache node modules
      uses: actions/cache@3b70782066bd817837b6bd8c518d45b54d91bf76 # pin@v2
      with:
        path: |
          .npm
          node_modules
        key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-
      continue-on-error: true

    - name: Install dependencies
      run: npm install --no-audit

    - name: Lint
      # run only on master/dev branch and pull requests
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
      run: npm run lint:sarif
  
    - name: Upload lint results
      # run if lint failed and only on master/dev branch and pull requests
      if: always() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request')
      uses: github/codeql-action/upload-sarif@b1e2c9b8bd0550a90e66c967d9795316f9f21910 # pin@codeql-bundle-20201008
      with:
        sarif_file: lint-results.sarif
      continue-on-error: true

    - name: Cache next.js build cache
      uses: actions/cache@3b70782066bd817837b6bd8c518d45b54d91bf76 # pin@v2
      with:
        path: .next/cache
        key: ${{ runner.os }}-next.js-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-next.js-
      continue-on-error: true

    - name: Build
      run: npm run build

    - name: Compress build
      run: tar -zcvf build.tar.gz .next

    - name: Archive build
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # pin@v2
      with:
        name: build
        path: build.tar.gz

  e2e:
      needs: build
      # run only on master/dev branch
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
      runs-on: ubuntu-latest

      container:
        image: ghcr.io/synthetixio/docker-e2e/base:12.21-npm6
        credentials:
          username: synthetixio
          password: ${{ secrets.GH_PACKAGES_READ_ONLY }}
        options: --shm-size=7gb

      steps:
      - name: Checkout
        uses: actions/checkout@ee5a9d1395988d7c82c67c69571871f5994b94df # pin@v2

      - name: Cache node modules
        uses: actions/cache@3b70782066bd817837b6bd8c518d45b54d91bf76 # pin@v2
        with:
          path: |
            .npm
            node_modules
          key: ${{ runner.os }}-e2e_tests-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-e2e_tests-
        continue-on-error: true

      - name: Install dependencies
        run: npm install --no-audit
        env:
            CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Set deployment url
        shell: bash
        run: |
          if [ ${{ github.event_name }} == pull_request ]
          then
            export BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#refs/heads/} | sed -e 's/\//-/g')
            echo "BASE_URL=https://${{ secrets.VERCEL_PREFIX }}-$BRANCH_NAME-${{ secrets.VERCEL_DOMAIN }}" >> $GITHUB_ENV
          else
            export BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -e 's/\//-/g')
            echo "BASE_URL=https://${{ secrets.VERCEL_PREFIX }}-$BRANCH_NAME-${{ secrets.VERCEL_DOMAIN }}" >> $GITHUB_ENV
          fi

      - name: Download build
        uses: actions/download-artifact@4a7a711286f30c025902c28b541c10e147a9b843 # pin@v2
        with:
          name: build

      - name: Extract build
        run: tar -xf build.tar.gz

      - name: Run e2e tests
        run: npm run test:e2e:ci
        env:
            SECRET_WORDS: ${{ secrets.SECRET_WORDS }}
            PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
            CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
            CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Archive e2e artifacts
        uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # pin@v2
        if: always()
        with:
          name: e2e-artifacts
          path: |
            tests/e2e/videos
            tests/e2e/screenshots
        continue-on-error: true
